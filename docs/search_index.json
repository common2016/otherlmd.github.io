[
["index.html", "编程语言笔记 序", " 编程语言笔记 云腾足下 2020年10月 序 不知道说啥，还是留首诗吧。 赵客缦胡缨，吴钩霜雪明。 银鞍照白马，飒沓如流星。 十步杀一人，千里不留行。 事了拂衣去，深藏功与名。 闲过信陵饮，脱剑膝前横。 将炙啖朱亥，持觞劝侯嬴。 三杯吐然诺，五岳倒为轻。 眼花耳热后，意气素霓生。 救赵挥金锤，邯郸先震惊。 千秋二壮士，烜赫大梁城。 纵死侠骨香，不惭世上英。 谁能书阁下，白首太玄经。 "],
["Maple.html", "1 Maple 1.1 一句话Tips", " 1 Maple 1.1 一句话Tips 多项式降幂排列sort(x^3*y-y^3*x,[y,x]) 乘号记得输入*，各种数学运算： 求导：diff(f,x); 求二阶导数，diff(f,x$2) nops返回比如向量的元素的数目： u:=[1,4,9]: nops(u); 求具体的数值，用evalf(Pi) 矩阵相乘用. 它的surfdata以点的数值的形式绘制三维曲线，相对比较好看。 表达式替换：subs(,) 合并同类项：collect() "],
["Julia.html", "2 Julia", " 2 Julia 安装包 import Pkg; Pkg.add(&quot;DataFrames&quot;) # Pkg.rm()是删除包 using DataFrames # 导入包 函数名字中带‘！’号，该函数不仅返回值，还会更改参数的值。 变量赋值 a,b,c = 1,&#39;a&#39;,3 一些函数可以作用于矩阵，如果在其后加个点意味着它作用于矩阵的元素，如 x1 = randn(6,4) x2 = round.(x1) 创建矩阵的方式，和matlab有许多共通之处。拼接也是类似的。 A = [1 2 3 4;5 6 7 8 9]; A = randn(10,8) # 10行8列的正态分布矩阵 A = ones（6，5） include类似于R的source. DataFrames包 "],
["DataProcess.html", "3 数据处理 3.1 一句话Tips 3.2 RJSDMX包下载世界各大数据库数据 3.3 前向、后向、线性和样条插值", " 3 数据处理 3.1 一句话Tips 因子操作 # 使用字符串有两个缺陷：第一，不在因子水平范围内的不会转化成NA # 第二，仅按字母排序。 # 因此，通过设定因子水平，可以解决上述两个问题。注意水平和字符串是一样的， # 只是相当于设定了范围和排序。 factor(c(&#39;Dec&#39;,&#39;Apr&#39;,&#39;Jam&#39;,&#39;Mar&#39;), levels = (&#39;Jan&#39;,&#39;Feb&#39;,&#39;Mar&#39;,&#39;Apr&#39;,&#39;May&#39;)) # 因子重编码, 把1改成unmarried等 farcats::fct_recode(rawdata$marrige, &#39;unmarried&#39;=&#39;1&#39;,&#39;married&#39;=&#39;2&#39;,&#39;cohabitation&#39;=&#39;3&#39;,&#39;divore&#39;=&#39;4&#39;,&#39;wid&#39;=&#39;5&#39;) dbplyr可以连接到几乎任何数据库。 wbstats下载世界银行数据，很牛逼。Stata里面的wbopendata包更牛逼。 stationaRy:一个从NOAA上下载气象数据，如气温，风向等的包。该包就三个函数，一个用来得到站点id，一个用这个id下载数据，还有一个是如果你想得到其他额外的气象数据时可能有用。 当你发现你用save命令保存一个数据长达数分钟时，建议你迅速调用qs包，可能一分钟不到就帮你快速读入和保存了。但这个包一次只能保存一个变量。 tor: 提供允许用户同时导入多个文件的功能. 读入excel中的sheet名：openxlsx::getSheetNames(file) XLConect处理excel最强大的包。但需要JRE（java run enviornment）。 # 可以不改变原有数据，然后把一个数据框精准地写入某个地方 writeWorksheetToFile(&quot;XLConnectExample2.xlsx&quot;, data = ChickWeight, sheet = &quot;chickSheet&quot;, startRow = 3, startCol = 4,header = FALSE, clearSheets = FALSE) 使用as.Date来生成日期，必须带有年月日三个要素，使用format来输出日期格式，此时可以只输出年和月。如as.Date('2010/05/01') %&gt;% format(.,format = '%Y%m') seq.Date()生成日期序列，包括日、星期、月、年。 readstata13包可以读入更高版本的stata数据格式。 zoo::rollapply(x, 30, mean)就是30天的移动平均求值。 select是一个很牛逼的函数 select(regdata,id, year) # 选择regdata数据框的id和year两列 select(regdata,starts_with(&#39;abc&#39;)) # 匹配以&#39;abc&#39;开头的列 select(regdata,ends_with(&#39;abc&#39;)) # 匹配以&#39;abc&#39;结尾的列 select(regdata,contains(&#39;abc&#39;)) # 匹配包含&#39;abc&#39;的列 select(regdata,matches(&#39;abc&#39;)) # 正则表达匹配 select(regdata,num_range(&#39;x&#39;,1:3)) # 匹配x1, x2,x3的列 R语言给数组各维数命名 # Create two vectors of different lengths. vector1 &lt;- c(5,9,3) vector2 &lt;- c(10,11,12,13,14,15) column.names &lt;- c(&quot;COL1&quot;,&quot;COL2&quot;,&quot;COL3&quot;) row.names &lt;- c(&quot;ROW1&quot;,&quot;ROW2&quot;,&quot;ROW3&quot;) matrix.names &lt;- c(&quot;Matrix1&quot;,&quot;Matrix2&quot;) # Take these vectors as input to the array. result &lt;- array(c(vector1,vector2),dim = c(3,3,2),dimnames = list(row.names,column.names, matrix.names)) print(result) pdftools包的函数可以读PDF文件： pdf_info(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_text(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_data(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_fonts(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_attachments(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_toc(pdf, opw = &quot;&quot;, upw = &quot;&quot;) pdf_pagesize(pdf, opw = &quot;&quot;, upw = &quot;&quot;) 同时，利用qpdf包的pdf_subset,pdf_combine,pdf_split可以提取PDF的部分内容，合并PDF文件，把每一页分成一个PDF文件。 3.2 RJSDMX包下载世界各大数据库数据 一般工作流： library(RJSDMX) # 查看有哪些库可以用 getProviders() # 库中有哪些子库可以用 getFlows(&#39;WITS&#39;) # 该子库调取数据需要哪几个字段 getDimensions(&#39;WITS&#39;,&#39;WBG_WITS,DF_WITS_TradeStats_Tariff,1.0&#39;) # 查看这个指标有几个选项 getCodes(&#39;WITS&#39;,&#39;WBG_WITS,DF_WITS_TradeStats_Tariff,1.0&#39;,&#39;INDICATOR&#39;) # 查好了就可以下载 ans &lt;- getTimeSeries(&#39;WITS&#39;, &#39;DF_WITS_TradeStats_Tariff/A.CHN.WLD.01-05_Animal.MFN-WGHTD-AVRG&#39;) # 你也可以调用图形窗口查阅命令 sdmxHelp() IMF2里面的IFS数据库里面有很多季度的宏观数据，如GDP，固定资本形成等 3.3 前向、后向、线性和样条插值 zoo包 zoo::na.locf缺省设置可以前向插，即缺失值等于前面的值。当将该函数的fromLast参数设为真时，即为后向插。 zoo:na.approx可以线性插值但不能外推；na.spline可以样条插值； imputeTS包,imputeTS::na.locf也可以，不过它只能对数值。它也有后向插值选项。 3.3.1 signal包 它有一个插值函数interp1函数，比较好用： interp1(x, y, xi, method = c(&quot;linear&quot;, &quot;nearest&quot;, &quot;pchip&quot;, &quot;cubic&quot;, &quot;spline&quot;), extrap = NA, ...) 它的参数说明如下 x,y：vectors giving the coordinates of the points to be interpolated. x is assumed to be strictly monotonic. xi：points at which to interpolate. method ： one of “linear”, “nearest”, “pchip”, “cubic”, “spline”. ‘nearest’: return nearest neighbour ‘linear’: linear interpolation from nearest neighbours ‘pchip’: piecewise cubic hermite interpolating polynomial ‘cubic’: cubic interpolation from four nearest neighbours ‘spline’: cubic spline interpolation–smooth first and second derivatives throughout the curve. for method=‘spline’, additional arguments passed to splinefun. Details extrap： if TRUE or ‘extrap’, then extrapolate values beyond the endpoints. If extrap is a number, replace values beyond the endpoints with that number (defaults to NA). "],
["统计.html", "4 统计 4.1 一句话Tips 4.2 MCMC算法", " 4 统计 4.1 一句话Tips cmna::mcint可以进行蒙特卡洛积分。 数值积分：pracma::integral 多元正态分布随机抽样：SimDesign::rmvnorm，还有mvnfast。mvtnorm包是多变量正态分布的包，很全。 KSgeneral包执行KS检验，比较一个分布是否来自某个理论分布。stats包的ks.test和dgof包的ks.test也可以,并且可以比较双样本是否来自同一个分布。 choose(n,k)：组合公式，n个里面选k个，有多少种组合方式。utils::combn(n,k)也可以。 e1071::permutations实现排列。 qrandom: 利用量子波动产生真随机数. 主成分分析可以调用psych包两个步骤实现： # 画个图选特征值数目： # 1. 特征值在1以上的才行； 2. 特征值大于模拟的平均特征才可行； 3. 碎石图 library(psych) fa.parallel(regdata, fa = &#39;pc&#39;) # 计算2个主成分。如果想要主成分载荷更有经济意义，注意设置旋转参数 principal(regdata,nfactors = 2,rotate = &#39;none&#39;) 4.2 MCMC算法 4.2.1 吉布斯抽样原理 如果联合分布不好求，但条件分布好求，可以用这个算法。 4.2.2 一些共轭先验分布的结论 理解这些结论，对于后续使用吉布斯抽样、MH算法非常有用。 结论1 若\\(x_1,\\cdots,x_n\\)是从均值为\\(\\mu\\)(未知)，方差为\\(\\sigma^2\\)(已知且为正)中正态分布中所抽取的一个随机样本，同时假定\\(\\mu\\sim \\mathcal{N}(\\mu_0,\\sigma_0^2)\\)，则给定数据和先验分布，\\(\\mu\\)的后验分布也是一个正态分布，其后验均值和方差为， \\[\\mu_* = \\frac{\\sigma^2\\mu_0+n\\sigma_0^2\\overline x}{\\sigma^2+n\\sigma_0^2},\\hspace{2em}\\sigma_*=\\frac{\\sigma^2\\sigma^2_0}{\\sigma^2+n\\sigma^2_0},\\;\\;\\;\\text{其中},\\overline x= \\sum_i^n x_i/n\\] 推广到多变量，则可以写为， \\[{\\mu}_*=\\Sigma_*(\\Sigma_0^{-1}{\\mu}_0+\\Sigma^{-1}\\overline{\\bf{x}}), \\hspace{2em}\\Sigma_*^{-1} = \\Sigma_0^{-1}+n\\Sigma^{-1}\\] 结论2 若\\(e_1,\\cdots,e_n\\)是从均值为0，方差为\\(\\sigma^2\\)的正态分布中抽取的随机样本，同时假定\\(\\sigma^2\\)的先验分布是自由度为\\(\\nu\\)的逆\\(\\chi^2\\)分布，即\\(\\frac{\\nu\\lambda}{\\sigma^2}\\sim \\chi^2_\\nu,\\lambda&gt;0\\)，则\\(\\sigma^2\\)的后验分布也是逆\\(\\chi^2\\)分布，自由度为\\(\\nu+n\\)， \\[\\frac{\\nu\\lambda+\\sum_i^ne_i^2}{\\sigma^2}\\sim \\chi^2_{\\nu+n}\\] 4.2.3 一个吉布斯抽样的典型案例 一个带自相关的回归模型可以写为， \\[\\begin{align} y_t&amp;=\\beta_0+\\beta_1x_{1t}+\\cdots+\\beta_kx_{kt}+z_t\\\\ z_t&amp;=\\phi z_{t-1}+e_t \\end{align}\\] 该模型需要估计的参数有三个，即\\(\\theta = (\\beta&#39;,\\phi,\\sigma^2)\\)。该参数的联合分布并不好求，但是条件分布则好求得多。 4.2.4 Metropolis 和 M-H算法 如果后验分布除了那个归一化的常数不知道，但分子是知道的，那可以用这个算法。这个场景是不是在贝叶斯估计中很熟悉？ MCMCpack::MCMCmetrop1R中有个例子提供了Metropolis算法，感觉还是很清晰。里面提到的’The proposal distribution’其实就是跳跃分布，即给定上一次抽样的参数，从这个跳跃分布中抽下一个参数。 4.2.5 一些带贝叶斯估计的R包使用报告 MTS::BVAR：这个包可以在一个一般的先验设定上估计VAR，先验可以是乏信息先验，也可以是明尼苏达先验，但问题是该包仅返回估计系数的均值和标准误，不返回抽样。 bvartools：在很大程度上可以定制BVAR的mcmc抽样，见它的一个优秀的引言。我用这个,自己写了乏信息先验的BVAR估计包。下次我再把明尼苏达先验添进去。 MCMCpack::MCMCregress:单方程的贝叶斯估计，它提供了\\(\\beta\\)是多元正态先验，方程误差项的方差协方差是逆伽玛的先验估计。 bayesm::runireg：单方程的贝叶斯估计，它提供了\\(\\beta\\)是多元正态先验，方程误差项的方差协方差是卡方分布的先验估计。 "],
["references.html", "References", " References "]
]
