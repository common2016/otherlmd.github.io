[["index.html", "编程语言笔记 序", " 编程语言笔记 云腾足下 2020年10月 序 不知道说啥，还是留首诗吧。 松下无人一局残 空山松子落棋盘 神仙更有神仙着 千古输赢下不完 "],["Maple.html", "1 Maple 1.1 快捷键 1.2 几个基本的代数处理 1.3 产生序列 1.4 函数定义 1.5 控制流 1.6 画图 1.7 矩阵 1.8 一句话Tips", " 1 Maple 1.1 快捷键 ctrl+del删除全行 ctrl+K,ctrl+J在前或后插入一行 ?plot看帮助 with(plottools)载入包 F5文本和数学之间切换，shift+F5，可执行的公式和不可执行的公式之间切换。 1.2 几个基本的代数处理 复合函数\\(f(g(x))\\)可以写成，(evalf@arccos)(2/3)，这就对反余弦进行了数值评价 factor,expand,simplify，collect会进行因式分解，多项式展开，化简，合并同类项。带有附加关系的化简,simplify(expr, {x*z=1}) 1.3 产生序列 中括号产生list，它是有序的。大括号产生集合，它是无序的。下面的代码可以产生一系列值。 L:= [a1,a2,a3]: map(f, L) # [f(a1),f(a2),f(a3)] 可以使用L[i..j]来选择集合中的元素，也可以使用op(i..j,L)来选择多个元素。当然，使用seq函数也能产生一系列值。 [seq(f(n),n=n1..n2)] 1.4 函数定义 简单函数定义：f:=x-&gt;(1+x)^(1/x) 复杂函数定义： f:=proc(x) (1+x)^(1/x) end proc: 1.4.1 参数的宣称 如下写法可以按位置给参数赋值 f := proc(a::integer := 10, b::expects(integer) := 100.1) a + b end proc: 也可以按参数名称赋值，但写法略有不同 f := proc( { simple::integer := 2 } ) sprintf(&quot;simple=%d&quot;,simple) end proc: 1.5 控制流 条件语句： if ...then... elif...then... else ... end if: 1.6 画图 2D图：plot(sin(x), x=-Pi..2*Pi); 3D图：plot3d(f(x,y),x=a..b,y=c..d) 等高线图：plots[contourplot](f(x,y),x=a..b,y=c..d) 多图叠在一张图显示：plots[display](p1,p2,p3) 1.7 矩阵 通常要载入包LinearAlgebra和linalg。 产生脚标为\\(a_{i,j}\\)的矩阵\\(A\\)。 A:=array([a[1,1],a[1,2]],[a[2,1], a[2,2]]) A:=Matrix([a[1,1],a[1,2]],[a[2,1], a[2,2]]) A:=Matrix(2,2,symbol = a) A:=Vector(2, symbol = a) 矩阵计算 with(LinearAlgebra): evalm(A^2) A.B # 矩阵相乘 1.8 一句话Tips # 是注释。 对于\\(\\left(-\\frac{3}{4}\\right)^{2/3}\\)Maple不会主动化简，因为它不知道这个指数的底是正还是负。此时可以使用surd(x,n)函数 \\[surd(x,n)=\\begin{cases}x^{1/n},x\\ge 0\\\\ -(-x)^{1/n},x&lt;0\\end{cases}\\] 命令如surd((-3/4)^(2/3),3)^2 语句可以清除原来的f的定义， 多项式降幂排列sort(x^3*y-y^3*x,[y,x]) 乘号记得输入*，各种数学运算： 求导：diff(f,x); 求二阶导数，diff(f,x$2) nops返回比如向量的元素的数目： u:=[1,4,9]: nops(u); 求具体的数值，用evalf(Pi) 矩阵相乘用. 它的surfdata以点的数值的形式绘制三维曲线，相对比较好看。 用y替换表达式中的x：subs(x=y, expression) "],["Julia.html", "2 Julia 2.1 Julia的一些体会 2.2 Julia的一些常用包 2.3 Julia的IDE体验 2.4 其他tips", " 2 Julia 2.1 Julia的一些体会 关于类型。Julia一些包会自己构造一些类型，我们很多时候需要访问这个类型的成员，但成员的名字往往并不事先知道。一般情况下，可以通过下面三种办法获知成员的名字： dump(类型) fieldnames(类型) 在帮助系统查看这个类型的帮助 2.1.1 关于函数的参数 参数本质上分两种，一种是按位置确认的参数。另一种是键值对参数。其按名字确认，位置随便。这两类参数在创造函数时要用分号隔开。 按位置确认的参数可以有默认值，记住这只是默认值，是不能按名字给它传参的。比如， function addtwo(x, y = 1) x + y end addtwo(1,2) # 正常 addtwo(1, y = 3) # 报错,不能按名字传，除非是第二类键值对参数。 类似于R语言中...，它也可以传这种参数，但它需要在...前加一个名称，如 function addtwo(x, y = 1, z...) x + y println(z) println(z...) end 函数体内可以直接调用z，但是此时的z是一个元组，很多时候我们需要把它展开，即以z...的形式调用。 2.2 Julia的一些常用包 2.2.1 优化包 Optim包做单变量，多变量优化非常优秀，是最流行的一个优化包。比如我常用的单变量优化，里面就有黄金分割算法等。 2.2.2 Julia数值求根 对于单方程求根，可以使用两个包如下。这两个包可以找到既定区间下所有的根。代码案例如下， using IntervalArithmetic, IntervalRootFinding f(x) = sin(x) - 0.1*x^2 + 1 a = roots(f, -10..10) # 第二个参数就是在`IntervalArithmetic`包中区间这个类型的表达方式 a[1].interval.lo # 返回第一个根的下界 这里有几个注意的地方:第一，roots返回的是Root对象，可以通过前面说的方法，查看它的成员字段，知道它有两个字段一个是interval，一个是status。我们需要前者，然后interval本身又是一个类型，于是按照前面的方法继续查看它的字段，一个是lo，一个hi。 2.2.3 DataFrames包 2.3 Julia的IDE体验 Julia的一个IDE就是Atom中的Juno，它已经非常好用了。记录几个点： 快捷键配置，是在一个文件中修改的，见https://blog.csdn.net/uniqsa/article/details/91315714。这个给一个我常用的运行和保存配置书写,注意缩进： &#39;.platform-darwin atom-text-editor[data-grammar=&quot;source julia&quot;]&#39;: &#39;ctrl-enter&#39;: &#39;julia-client:run-block&#39; &#39;shift-ctrl-enter&#39;: &#39;julia-client:run-all&#39; &#39;body&#39;: &#39;ctrl-s&#39;: &#39;core:save&#39; VSCode这个IDE似乎更好用。记录几个快捷键备忘： ctrl+enter执行本行命令但光标不往下走 ctrl+shift执行本行命令但光标往下走 cmd+M激活终端，这个是我自己设的。后来我发现它有个缺省的`ctrl+``就是激活终端。 cmd+1/2/3在不同组的pane间切换。 ctrl+1/2/3激活第1/2/3个编辑器。 esc清除本行代码运行结果 cmd+shift+p调出命令面板，可以直接输命令执行 file菜单下可以打开文件夹，也可以打开工作空间。如果你只有一个项目，往往只需要打开文件夹，但如果你有多个项目同时运作，你可以保存为一个工作空间，然后以后以打开工作空间的形式来编辑代码。 查bug，要用那个带小虫子的按钮运行。 2.4 其他tips 查看模块内都有些什么东西，用names(MyModule)，查看一个类里面都有什么东西，用fieldnames(MyClass)。 类似于R中.rdata的格式的数据保存，JLD2包的jldsave(\"mydata.jld2\")使用。然后用load(\"mydata.jld2\")来加载。 在Julia中变量按引用传递，举个例子如下。 a = [1,2,3] b = a a[1] = 10 # 此时b的值也会变成10，如果你想让两个变量不一样，你应该上一句使用b=copy(a) 安装包 import Pkg; Pkg.add(&quot;DataFrames&quot;) # Pkg.rm()是删除包 using DataFrames # 导入包 Pipe包提供了强大的管道操作|&gt;，与R语言中的.不同，它使用_作为占位符。 @pipe data |&gt; addX(_[1],_[2]) |&gt; println 1:5返回的是一个迭代器，可以用collect(1:5)变成一个数组 using RCall, Statistics可以同时导入多个包 mean(skipmissing([1, missing, 3]))求均值忽略缺失值 查看模块中所有方法或变量names(模块)。通常是去github上看它的案例用法。 返回当前工作空间的变量，可以用names(Main)或者varinfo() 函数名字中带‘！’号，该函数不仅返回值，还会更改参数的值。 在Julia表达式中，如果要标志某个字符是变量，也就是它要被它的内涵所替代，前面要加美元符号。比如定义一个宏： macro sayhello(name) :(println(&quot;Hello,&quot;,$name)) # 注意括号的使用 end 变量赋值 a,b,c = 1,&#39;a&#39;,3 一些函数可以作用于矩阵，如果在其后加个点意味着它作用于矩阵的元素，如 x1 = randn(6,4) x2 = round.(x1) 创建矩阵的方式，和matlab有许多共通之处。拼接也是类似的。 A = [1 2 3 4;5 6 7 8 9]; A = randn(10,8) # 10行8列的正态分布矩阵 A = ones（6，5） include类似于R的source. "],["Stata.html", "3 Stata 3.1 数据处理 3.2 回归相关 3.3 一些外部命令 3.4 stata对某个变量随机抽样 3.5 Stata调用R 3.6 Miscellaneous", " 3 Stata 3.1 数据处理 生成观测的脚标，即1:nrow(x): gen yr = _n // 回归完成，使用predict可以得到拟合值，残差等序列。如predict yres, resid则得到名为yres的残差。 matrix list A: 显示矩阵 outfile v1 v2 v3 using mydata.csv, comma 输出逗号分割的csv文件。 外部命令把矩阵保存为dta格式：matsave A, replace p(\"matrices\") saving意味着把矩阵A保存在dir/matrices/下。 季节调整，外部命令sax12 从变量名income生成一个新的变量名如income_y，则可以如下操作： local xvar income local yvar `xvar&#39;_y 此时的yvar就是income_y。 3.2 回归相关 #是所有分类交互，##是仅仅两个分类交互。 获得残差。估计完以后，使用命令：predict e, r //e是生成的残差变量名，r表明生成残差。 将回归后的系数存入数据集中，然后即可导出。 mat b = e(b)&#39; svmat double b, n(beta) 滞后、超前、差分变量。L.x L2.x F.x F2.x D.x D2.x 字符串转因子变量：encode str_var, g(newvar) 恩格尔格兰杰两步法：egranger是外部命令。 滚动估计：_b,_se意味着保存回归系数和标准误，200的窗口样本，原来数据集的变量合并到新的保存的数据集betas中去。 rolling _b _se, window(200) saving(betas, replace) keep(date):regress ibmadj spxadj 3.2.1 描述性统计和回归结果导出 一个例子： ssc install sum2docx sum2docx pay stock fund finance income age edu sex hukou marriage bond /// insurance deposit income depositDum RiskDum InsDum using pm.docx, replace /// stats(N mean(%9.2f) sd min(%9.0g) /// median(%9.0g) max(%9.0g)) /// title(&quot;表 1: 描述性统计&quot;) ssc install reg2docx probit depositDum pay income age edu sex hukou marriage est store p1 probit RiskDum pay income age edu sex hukou marriage est store p2 probit InsDum pay income age edu sex hukou marriage est store p3 reg2docx p1 p2 p3 using pm.docx, append title(&quot;表2: Probit回归结果&quot;) scalars(r2_p N) 另一个例子：输出回归结果到csv文件 reg y x est store m1 esttab m1 m2 m3 using rlt.csv, replace //输出回归结果 esttab e(b) using rlt.csv, replace //输出回归系数 3.3 一些外部命令 diff可以做DID，PSM-DID，分位DID xtnptimevar：非参时变面板固定效应系数估计。方法是Li, Chen and Gao (2011)。 xtfixedcoeftvcu：Hsiao(2014)的书上变系数中的固定系数估计命令。 xtsemipar: Baltagi and Li (2002)的半参部分线性固定效应面板估计。代码缺陷在于非参数只能是一个变量。 xthreg，Hansen(1999)静态面板阈值回归。 3.4 stata对某个变量随机抽样 问题 回归以后，如何对残差进行自助抽样？stata里面对某个变量随机抽样会比较麻烦一些。它有一个函数sample, 但是它是对整个数据集抽样。要对某个变量抽样，需要曲线救国。 解决的思路： 首先保存原来的数据集； 然后删掉其他变量，仅保留残差； sample残差，然后merge刚刚保存的数据集。这就得到了随机抽样后的残差。 代码 cd E:\\17_HuaDong\\reserch\\GVAR\\RCode\\GVAR_UsingR2e use regdata, replace gen time = _n tsset time threshold y, threshvar(thV) regionvars(V*) trim(20) nthresholds(1) predict double eps, residuals save GVAR, replace keep eps bsample 100 merge 1:1 _n using GVAR 3.5 Stata调用R 安装rsource包 ssc install rsource 直接在do文件中写R代码 //调用R软件 END_OF_R是设定一个标志，表示用这个表示结束 rsource, terminator(END_OF_R) rpath(D:\\Program Files\\R-3.5.0\\bin\\R.exe) /// roptions(--vanilla) // 修改路径 rm(list = ls()) library(foreign) library(tidyverse) a318 &lt;- read.dta(&#39;E:/25_PartTimeJob/1810318/a318.dta&#39;) # 修改路径,记住，是反斜杠 a318 &lt;- as.tibble(a318) library(PSTR) regdata &lt;- NewPSTR(a318,dep = &#39;ev&#39;,indep = c(&#39;cs&#39;,&#39;as&#39;,&#39;p&#39;,&#39;es&#39;), indep_k = c(&#39;cs&#39;,&#39;as&#39;,&#39;p&#39;,&#39;es&#39;),tvars = &#39;go&#39;,iT = nrow(a318), im = 1) pstr &lt;- LinTest(regdata) print(pstr,&#39;tests&#39;) rlt &lt;- EstPSTR(regdata,im=1,iq=1) print(rlt,&#39;estimates&#39;) END_OF_R 在do 文件中调用R代码 rsource using nitz2.R, rpath(D:\\Program Files\\R-3.5.0\\bin\\R.exe) roptions(--vanilla) 3.6 Miscellaneous adopath可以查看ado文件存放的路径，如果你安装了外部包，想查看它的源代码，可以用这个命令看看路径在哪里。比如我的默认就在\"C:\\Users\\Administrator\\ado\\plus/\"。 wbopendata包的使用 ssc install wbopendata //下载世界银行数据 db wbopendata //一个GUI下载界面 icio投入产出分析，koopman et al. (2014)的方法 stata15有一个阈值非线性估计命令threshold非常好用：通过AIC，SC和HQIC来选择阈值的个数，最小的就是最合适的。 egi：计算EG指数。 stata中文乱码问题 第一步，先用命令unicode analyze Data035.dta 分析数据集的编码 第二步，用命令unicode encoding set gb18030设置编码 第三步，用命令unicode translate \"Data035.dta\", transutf8转换编码 备注：有时某些变量无法转化，可使用invalid(mark)选项。 "],["Matlab.html", "4 Matlab 4.1 一句话Tips 4.2 窗口输出到文本 4.3 GVAR Toolbox使用报告", " 4 Matlab 4.1 一句话Tips 在Editor中各个窗口之间的切换 快捷键ctrl+pageup和ctrl+pagedown之间可以实现在editor中所打开文件之间的切换 在IDE中各个窗口之间的切换 ctrl+Tab 实现IDE中的各个窗口轮流转换 ctrl+PageUp/PageDown在子窗口的各标签切换 ctrl+0(或者1、2、3、4)实现转换到控制台(或其他特定窗口 ) ctrl+shift+0切换到editor窗口 ctrl + R/T：注释/取消注释 杀死excel进程：system(‘tskill excel’) F9运行当前行 当使用一个函数，输出结果有两个。但第一个结果不需要，只需要第二个时，第一个结果可用~代替。如[~,area] = xlsread('malm.xlsx',1,'b2:aa31'); 当使用一个函数，输入需要跳跃时，可用[]代替。如 [x, fval] = fmincon(@loglik, para0,[],[],[],[],... [0.0001,0.0001,0.0001, -1, 0.00001*ones(1,ncol)],[ones(1,length(para0))],... [],[],Y, tau, nrow, ncol); 4.2 窗口输出到文本 1.把窗口输出写入指定的文件，之后会一直记录窗口输出信息，直到你关闭； diary(&#39;testlog.txt&#39;); diary on; 2.关闭日志记录 diary off; 3.删除日志 diary off;%先关闭 delete(&#39;testlog.txt&#39;); 4.3 GVAR Toolbox使用报告 4.3.1 数据输入 E-G列中，国家排序会影响后面的估计，结果的呈现都是以该顺序排列的。如果你要用程序内建的加权矩阵，那么G列的国家码需要填充。 在各变量数据存放的sheet中，sheet名要按照short name来命名，虽然顺序不必一致，但推荐一致。 变量数据的sheet中，第一列按yyyyMmm形式标识月度数据，yyyyQq的形式标识季度数据。特别注意此时国家的名字都是short name命名，而且顺序和main中的国家顺序精确一致。 注意，缺失值一定要用123456789替代，不要留空。 4.3.2 模型设定 在模型设定中，要注意，空的意味着数据不可行，而不要设置成0. 有个时候要注意协整rank不能过大，比如3个变量设成4个rank，会报错。 4.3.3 一些坑 1.国内变量那些相应的权重矩阵要填满，否则会报错。如都填好wmat1。 2.GVAR Toolbox主导单元是按全局变量设置的，因此，如果你要将美国作为主导单元，应该将美国的变量单独提出来作为全局变量。（对否？） "],["git操作流程.html", "5 git操作流程 5.1 基本语法 5.2 生成公钥 5.3 本地库操作 5.4 关联远程库（码云） 5.5 打开VI后的操作 5.6 给递交进行标记", " 5 git操作流程 5.1 基本语法 cd E:/17_Huadong/ 到当前目录。 pwd 查看当前目录是啥。 5.2 生成公钥 使用ssh-keygen -t rsa -C \"xxxxx@xxxxx.com\"生成公钥，一般存在C:\\Users\\Administrator\\.ssh\\id_rsa.pub中，复制出来到码云的公钥中即可。 5.3 本地库操作 使用cd命令进入要同步的目录 使用git init初始化 使用git add .添加所有目录及该目录下的文件进入暂存区 使用git commit -m \"your message\"递交更改 使用git reset --hard 3628164进行版本回退，后面的数字为文件更改的唯一标识码。可以通过git log（查看提交历史）或git reflog（查看命令历史，回到未来版本）来找该码. 若是恢复到上一个版本，可用git reset --hard HEAD^命令。 git status查看当前文件更改的情况，包括哪些文件修改了等等 git rm myfile.txt从版本库中删除文件，然后·git commit -m \"message\"，若是删错了，可用git checkout -- myfile.txt恢复 5.4 关联远程库（码云） 使用git remote add origin git@gitee.com:jtdx/SomeApp.git命令关联远程库（虽然我在码云的昵称为common2016，但此处是jtdx），注意反斜杠最后的字母是你的项目名称。不建议使用Https协议关联，这会使得后期推送都要输密码。建议用邮件的形式关联。 使用git push -u origin master进行第一次全部推送 今后则使用git push origin master进行推送即可 从远程库更新本地库，用git pull 其他： 使用git remote -v查看关联的远程库地址 使用git remote rm origin删掉名字为origin的远程库 使用git clone https://gitee.com/jtdx/HowBigHelpOfTheTeacher.git复制所有文件到本地库。但https协议每次都要输密码。但使用git clone git@gitee.com:jtdx/HowBigHelpOfTheTeacher.git命令则不需要。当然之前，该台电脑的公钥要先添加进去码云。 如果使用https协议传输，有时还会出现“SSL_ERROR_SYSCALL”的错误，解决该错误，就是更改为使用SSH传输,更改的语句为git remote set-url origin git@github.com:xxx/xxx.git 5.5 打开VI后的操作 当你没有设置默认文本编辑器时，会打开 vi。其基本操作是： 初始在正常模式，按 i （小写，即按 I 键）进入插入模式，写文本； 写完后按 Esc 回到正常模式 输入 :wq （依次按 &lt;Shift-;&gt; w q，会在末行 显示）保存更改并退出编辑器。 5.6 给递交进行标记 可如下标记当前的HEAD，参数-a是这个标记的名字，-m是这个标记的信息，然后递交至远程库。 git tag -a &#39;v0.1.0&#39; -m &#39;add cp method&#39; HEAD git push origin tag v0.1.0 可如下查看所有标记, git tag -l 查看标记更多的信息, git show v0.1.0 "],["C.html", "6 C语言 6.1 一句话Tips", " 6 C语言 6.1 一句话Tips C的注释与Stata的注释几乎一致, 如/* 这是注释 */，单行注释//。 一个C文件由若干个函数构成，包括主函数main()。在函数之外定义的变量成为全局变量，该变量可以在所有其他函数中被调用。 GSL是一个开源的C语言矩阵运算库。 我感觉指针的好处在于可以在函数内部更改变量的值。不像其他语言，最终可以通过return把值返回出来，在C语言中，可以利用指针直接改，不需要return。 "],["Latex.html", "7 Latex 7.1 一句话Tips 7.2 beamer相关 7.3 表格相关 7.4 章节标题格式修改 7.5 数学公式左对齐 7.6 中文字体加粗 7.7 使用某种常用字体 7.8 我的R代码排版模版 7.9 latex插入附录 7.10 latex参考文献的编码思路 7.11 一些文体的模版", " 7 Latex 7.1 一句话Tips 设置目录的表现格式。titletoc包中\\titlecontents{subsubsection}[8.5em]{}{\\contentslabel{1.5em}}{}{\\titlerule*[5pt]{$\\cdot$}\\contentspage}设置目录中subsubsection的表现格式，8.5em指的是subsubsection的标题内容离页面最左边距离8.5em，\\contentslabel{1.5em}中的1.5em指的标题序号比如1和标题内容之间的空白是1.5em。 book类默认左边留白，可以\\documentclass[openany]{book}左边不留白。 使用include后不分页，可以 \\usepackage{newclude} \\include*{filepath/filename} 页面横置： \\usepackage{pdflscape} \\begin{document} \\begin{landscape} This is a landscape page. \\end{landscape} \\end{document} 在命令行输入texcount your_tex_file.tex可以计数文件中的字符。 让表格从4开始编号\\setcounter{table}{3}，让页码重新编号\\setcounter{page}{3}，以此类推。 xpinyin包可以生成拼音，比如\\xpinyin*{好}可以在其上方产生拼音，也可以自己设拼音，还可以设环境。可以参见其说明文档，是中文的。 用tikz包可以生成PDF图片，此时可以在命令行用pdftocairo -svg picture.pdf将这个pdf文件转成SVG 格式的矢量图，只要安装了texlive就会有pdftocairo命令。再利用Visio将其转换成word可以用的wmf格式的矢量图。 设置目录的深度，一般两个命令。仅用第一个命令会使得更深的目录缺乏编号。 \\setcounter{tocdepth}{4} % 控制目录显示的深度 \\setcounter{secnumdepth}{3} % 控制目录显示的深度中，前面编号的显示深度。 latex也可以写循环。加载multido包,如下语句表示从3开始，每次变量自增1，循环16次。这是把一个PDF文件拆分成单独的页面后加入latex的一个常见操作。 \\multido{\\n=3+1}{16}{\\noindent\\includegraphics[scale=0.9]{RD复印 \\n.pdf}\\\\} 使用pdfpages包可以插入pdf文件，命令比如：\\includepdf[pages={1,2}]{1.pdf} 定制封面页时，要使第一行下沉几行，可以这样： \\hspace{2em} \\vspace{4em} \\begin{center} \\heiti\\zihao{1} 江西省第十九次社会科学优秀成果奖附件材料 \\end{center} 使用listing包输入代码时，很多时候我都是输入R语言，R语言里面会有一个美元符号，我们需要将这个符号“逃逸”，即在选项中设置[mathescape=false]。关于逃逸，更多细节可以见包的说明文档。 小写罗马字母， % 小写罗马字母\\rmnum{2} \\newcommand{\\rmnum}[1]{\\romannumeral #1} % 大写罗马字母\\Rmnum{2} \\newcommand{\\Rmnum}[1]{\\uppercase\\expandafter{\\romannumeral #1}} pifont包的\\ding{172}提供了带圈的1的数字。 可定义如下环境给某段文字加上上下边框双横线，比如我在审稿意见中经常使用。 \\newenvironment{myequestion}{\\noindent\\makebox[0pt][l]{\\rule[-1.5mm]{45em}{0.5pt}}\\rule[-0.7mm]{45em}{0.5pt}\\par}{\\par \\noindent\\makebox[0pt][l]{\\rule[3mm]{45em}{0.5pt}}\\rule[3.8mm]{45em}{0.5pt}\\par} 给中文加下划线、波浪线等，用xeCJKfntef包，这样使用\\CJKunderline或者\\CJKunderwave等命令加了下划线等就能自动换行。 页面横置 \\usepackage{pdflscape} \\begin{landscape} ... \\end{landscape} 在命令行输入texdoc ctex会打开ctex包的说明文件。 input/output就不会在斜杠符号处被断词。如果希望这类东西被中断，可以将斜杠符号改为\\slash。 下载TexLive作为Tex的内核，而不是ctex，因为前者不断在更新，更加优化。 中文标签乱码：使用如下选项即可。 \\documentclass[hyperref, UTF8]{ctexart} 图片文件名包含下划线，可用\\string“ 17_Huadong\\string”表达。如 \\includegraphics[scale=0.8]{\\string\"E:/17_HuaDong/reserch/GVAR/RltPaper/DesStat\\string\".png} - 使用\\verb||时，如果是在其他命令中作为参数使用，是会报错的。例如\\footnote{\\verb|abc|}是不行的。应该加载fancyvrb包，然后先保存\\SaveVerb{myverb}|abc|，再使用\\footnote{\\UseVerb{myverb}}即可。 \\renewcommand\\refname{Reference}把“参考文献”四个字修改为“Reference” \\rule[水平高度]{长度}{粗细}，文档中插入一条横线。如\\rule[0mm]{55em}{0.5mm} 使用framed包，用\\begin{framed}\\end{framed}环境可以给整段文字加边框。 \\pagestyle{empty}当前及后续页无页眉,第一页因为包含标题等可能有特殊格式，要消掉它的页码的话则用\\thispagestyle{empty}。 \\renewcommand\\refname{参考文献}把”Reference”变成“参考文献”。 7.2 beamer相关 在beamer中加入Logo的话，在\\begin{documents}之后使用如下命令\\logo{\\includegraphics[height=1.5cm]{RM.jpg}}。Logo的位置取决于模板。 如何在beamer中设置颜色？使用普通的color包或者xcolor包都会报错，它有自己的一套办法。 % 首先设置好颜色，并命名为myblue \\setbeamercolor{myblue}{fg=blue!80!black} % 这是以感叹作为分隔符的三色设置 % 然后在需要的地方使用 \\textbf{\\usebeamercolor[fg]{myblue}背景} beamer中也是可以插入代码的，可以使用listings包，不过在使用代码的那个frame必须要加一个选项[fragile]。 bemaer中可以分栏，载入包multicol，使用\\begin{multicols}{2}巴拉巴拉\\end{multicols}就是2栏。 7.3 表格相关 给表格添加颜色，载入colorbl包，\\cellcolor[gray]{.7}设置单元格颜色，\\rowcolor[gray]{0.7}设置行颜色，列颜色设置可以参见胡伟(2013, p231)。 表头添加一根斜线，使用diagbox包，例如， \\usepackage{diagbox} \\begin{document} \\begin{tabular}{|c|c|c|c|} \\hline \\diagbox{姓名}{成绩}{科目} &amp; 语文 &amp; 英语 &amp; 数学\\\\ \\hline 张三 &amp; 87 &amp; 66 &amp; 98 \\\\ \\hline 李四 &amp; 78 &amp; 78 &amp; 76 \\\\ \\hline 王五 &amp; 90 &amp; 93 &amp; 81 \\\\ \\hline \\end{tabular} \\end{document} 调整表格的行高，使用array包的\\renewcommand{\\arraystretch}{2}更佳，默认是1，它表示行与行之间的距离系数是1。该命令放在\\begin{table}之后即可。 \\cline{2-4}紧跟在\\\\后，表示表格中从第2列至第4列划一条横线 表格跨行使用multirow包。语法命令格式如下， \\multirow{行数}{宽度}{内容} \\multirow{行数}*{内容} 7.3.1 长表格 \\usepackage{supertabular} \\begin{center} \\small \\tablecaption{变量描述\\label{var}} \\tablefirsthead{\\hline\\multicolumn{1}{c}{变量}&amp;\\multicolumn{1}{c}{含义}&amp;\\multicolumn{1}{c}{2018年变量编码}&amp;\\multicolumn{1}{c}{2016年变量编码}&amp;\\multicolumn{1}{c}{2014年变量编码}&amp;\\multicolumn{1}{c}{2010年变量编码}\\\\\\hline} \\tablehead{\\multicolumn{6}{r}{表 \\ref{var} (续)}\\\\\\hline \\multicolumn{1}{l}{变量}&amp;\\multicolumn{1}{l}{含义}&amp;\\multicolumn{1}{l}{2018年变量编码}&amp;\\multicolumn{1}{l}{2016年变量编码}&amp;\\multicolumn{1}{l}{2014年变量编码}&amp;\\multicolumn{1}{l}{2010年变量编码}\\\\\\hline} \\tabletail{\\hline} \\begin{supertabular}{lllllp{10mm}} withsons &amp; 同子女关系如何 &amp; qf1\\_a\\_1 &amp; qf1\\_a\\_1 &amp; &amp; qf1\\_a\\_1\\\\ worktime &amp; 每周工作时间（小时） &amp; qg6 &amp; qg6 &amp; qg6 &amp;qg504\\\\ \\end{supertabular} 注意三个参数： \\tablecaption{}:整个表格标题 \\tablefirsthead{}:首页表格标题 \\tablehead{}:续页表格标题 \\tabletail{}:分页时表格底部写啥，一根线就直接用\\hline 排版效果如下：见有道截图 长表格的一个最大优点就是可以跨页排版，有时不用那么复杂，只需要使用\\endfirsthead命令来结束表头，其他与普通表格一致即可达到想要的效果。如， \\usepackage{longtable} \\begin{longtable}{c|c} \\caption{内生性分析}\\\\\\hline\\endfirsthead A&amp;B\\\\ C&amp;D \\end{longtable} 7.4 章节标题格式修改 如果想从某页开始章节重新编号，可以在该处输入命令， \\setcounter{section}{0} % 下一节编号为1 修改章节的标题，把”Chapter 1”变成”第1章”。 \\usepackage{titlesec} % \\titleformat{command}[shape]{format}{label}{sep}{before}[after] \\titleformat{\\chapter}{\\centering\\Huge\\bfseries}{第\\,\\thechapter\\,章}{1em}{} “Chapter 1”变成”一” \\usepackage{ctexcap} \\CTEXsetup[number={\\chinese{section}}, format + = {\\fangsong\\zihao{4}}]{section} \\CTEXsetup[name ={（,）},aftername = {\\hspace{0em}},number={\\chinese{subsection}}, format + = {\\heiti\\zihao{-4}}]{subsection} % 小节标题变成(一) \\CTEXsetup[number={\\the\\value{subsubsection}}, format + = {\\songti\\zihao{5}}]{subsubsection} % 第三层标题变成 1，2，... 一个整体地中文修改参考如下 \\usepackage{titlesec} \\newcommand{\\sectionname}{节} \\renewcommand{\\figurename}{图} \\renewcommand{\\tablename}{表} \\renewcommand{\\bibname}{参考文献} \\renewcommand{\\contentsname}{目~录} \\renewcommand{\\listfigurename}{图~目~录} \\renewcommand{\\listtablename}{表~目~录} \\renewcommand{\\indexname}{索~引} \\renewcommand{\\abstractname}{\\Large{摘~要}} \\newcommand{\\keywords}[1]{\\\\ \\\\ \\textbf{关~键~词}：#1} \\titleformat{\\chapter}[block]{\\center\\Large\\bf}{\\chaptername}{20pt}{} \\titleformat{\\section}[block]{\\large\\bf}{\\thesection}{10pt}{} 7.5 数学公式左对齐 如果我们想要全文行间公式(display) 均左对齐，我们有三个方法如下： • 使用\\documentclass[fleqn]{article}对整篇文章有效。 • 加载宏包amsmath时，设置fleqn参数\\usepackage[fleqn]{amsmath}。 上述方法选其一即可实现左对齐，但这个情况有需要注意的地方： 我们使用了fleqn, 当且仅当使用这一参数的时候，行间公式默认有一个缩进mathindent，其值系统定义为27.37506pt minus 27.37506pt 若是我们不想要这个缩进，可以用\\setlength{\\mathindent}{0pt}将其缩进设置为0pt。 如果我们仅仅希望部分公式左对齐，则可以采用下述方法 \\begin{flalign} &amp;\\text{your equation}&amp; \\end{flalign} 7.6 中文字体加粗 % 见胡伟133页 \\setCJKfamilyfont{myfs}[AutoFakeBold=2]{华文仿宋} % 指定仿宋一个新名字myfs，它是可以加粗的 \\renewcommand*{\\fangsong}{\\CJKfamily{myfs}} % 然后更新原有仿宋 7.7 使用某种常用字体 设置一个字体一般通过五个属性，即编码、字族、序列、形状和尺寸。然后通过 \\DeclareFixedFont{命令}{编码}{字族}{序列}{形状}{尺寸} 来设置某一种字体。这些字体的例子可以参见胡伟的105页。 7.7.1 如何使用一个新的字体？ 如果你在网上下载了某个字体： 这个字体文件一般是ttf等后缀名，你要右键点击“为所有用户安装”，然后 可以通过在命令行输入fc-list -f \"%{family}\\n\" :lang=zh &gt;d:zhfont.txt来查看在latex中调用时的名称，每个逗号隔开的都是可以调用的名称。比如， 如下代码设置了主要字体使用繁体字,并且字符旋转90度，实现繁体竖排。 \\usepackage{xeCJK} \\setCJKmainfont[Vertical=RotatedGlyphs,CJKShape=Traditional]{Adobe Fangsong Std} 对于字体更加详细的细节可以见https://zhuanlan.zhihu.com/p/260989874。 如果不安装，那么也可以如下调用 % 导言区 \\usepackage{xeCJK} \\setCJKfamilyfont[Path = D:/]{mzd}{maozedong.ttf} % 字体文件是maozedong.ttf，给这个字体文件随便取个名，比如mzd \\newcommand{\\mzd } {\\CJKfamily{mzd} } % 给这个字体名设置一个命令 % 正文 {\\mzd 我是骄阳} % 正文中就可以调用这个命令了。 一个另外的例子：使用Times New Roman字体 % 胡伟129页 \\usepackage{fontspec} {\\fontspec{times.ttf}I am TImes New Roman} 7.8 我的R代码排版模版 7.8.1 listings包 导言区输入： \\lstset{numbers=left, %设置行号位置 basicstyle=\\ttfamily\\small, numberstyle=\\tiny, %设置行号大小 keywordstyle=\\color{blue!70}, %关键字颜色 commentstyle=\\color{red!50!green!50!blue!50}, %评论颜色 frame= shadowbox, %single, %设置边框格式 rulesepcolor = \\color{RoyalBlue}, % backgroundcolor = \\color{RoyalBlue}, escapeinside=``, %逃逸字符(1左面的键)，用于显示中文 breaklines, %自动折行 extendedchars=false, %解决代码跨页时，章节标题，页眉等汉字不显示的问题 xleftmargin=2em,xrightmargin=2em, aboveskip=1em, %设置边距 % tabsize=4, %设置tab空格数 showspaces=false, %不显示空格 showtabs=flase, %不显示tab showstringspaces=false %不显示字符串中的空格 } 正文插入： \\begin{lstlisting}[language=R] data(&quot;Affairs&quot;,package = &#39;AER&#39;) # `婚外情数据&#39; Affairs$ynaffair[Affairs$affairs &gt;0] &lt;- 1 Affairs$ynaffair[Affairs$affairs == 0] &lt;- 0 Affairs$ynaffair &lt;- factor(Affairs$ynaffair,levels = c(0,1),labels = c(&#39;No&#39;,&#39;Yes&#39;)) \\end{lstlisting} 分页时，若页眉页脚有中文，会报错，此时最好把代码再次嵌入figure的浮动体中。 还有个我更喜欢的设置， \\lstset{language = R, basicstyle = {\\ttfamily\\small},keywordstyle = \\color{RoyalBlue},frame = lines, commentstyle=\\color{gray},breaklines=true} % 或者阴影边框 \\lstset{language = R, basicstyle = {\\ttfamily\\small},keywordstyle = \\color{RoyalBlue},frame = shadowbox, rulesepcolor=\\color{gray},commentstyle=\\color{gray},breaklines=true} 7.8.2 fancyvrb包 直接用Verbatim环境，从R语言里面直接copy. 可以参考胡伟76页对其参数的说明。 \\begin{Verbatim} a &lt;- 3 \\end{Verbatim} 7.9 latex插入附录 \\appendix:说明之后的内容为附录。之后可以继续使用\\section{}命令，只是此时显示为A、B等。 \\appendixpage将添加一个专门的附录页. \\addappheadtotoc将附录添 加到目录当中，需要加载\\usepackage{appendix}。不过，一旦附录开始，将不能转回正文。另一种方式可以使用 /begin{appendices}和/end{appendices}`在正文中添加附录，参看http://www.tex.ac.uk/cgi-bin/texfaq2html?label=appendix 关于所有的latex相关的命令，有一本手册（书）http://tobi.oetiker.ch/lshort/lshort.pdf ， 好像有中文的翻译版本,点击http://net.ytu.edu.cn/share/%D7%CA%C1%CF/lshort-cn.pdf。 7.10 latex参考文献的编码思路 7.10.1 参考文献较少的情况 就是定义一个参考文献环境, 然后用命令\\bibitem{Ale2019}写即可，99是告诉文献有多少个，好排版，如下。这个Ale2019是为了方便正文引用。 \\begin{thebibliography}{99} \\bibitem{Ale2019} Alessandri, P. and H. Mumtaz, 2019. Financial regimes and uncertainty shocks. Journal of Monetary Economics, 101: 31-46. \\end{thebibliography} 关于正文引用格式的修改，参考胡伟（2011，p378）. 7.10.2 参考文献较多的情况 分两步： 1. 在记事本中把参考文献的信息记录下来，然后保存为.bib文件，放到源文件同目录下。可以使用JabRef软件帮忙管理。 2. 在正文中需要插入参考文献的地方写两个命令即可。如下， \\bibliographystyle{文献格式名} \\bibliography{第一步建立的那个文件的名字，不需要bib后缀} 进一步说明： - 这种方法就是必须要在正文中有\\cite{}，后面才有参考文献。如果正文没有引用，又想在参考文献中出现，可以使用\\nocite{} - 这种方法就可以指定期刊的参考文献风格，即修改文献格式名即可。如最普通的就是plain风格。 7.10.3 如何将文献引用作为上标出现？ 四个办法： 将文献引用作为上标出现可以使用overcite 宏包 \\usepackage{overcite} 使用natbib 宏包的super 参数 \\usepackage[super]{natbib} 但是，这两种方法产生的上标引用都没有括号。要增加括号，可以修改这两个宏包中的相应定义。更简单的一个方法是使用如下命令， \\makeatletter \\def\\@cite#1#2{\\textsuperscript{[{#1\\if@tempswa , #2\\fi}]}} \\makeatother 而不需使用任何宏包。 \\usepackage[biblabel]{cite}使用该命令即可 7.11 一些文体的模版 7.11.1 社科申报课题部分模版 申报书有两个特征： 页面要有边框，这可以通过使用framed包中的framed环境实现 一般前面有个表格。如何让表格中的横线顶到边框，通过使用零宽度的盒子实现。 \\documentclass[hyperref]{article}% 使得标签不乱码 \\usepackage[UTF8]{ctex}%中文宏包 \\usepackage{amsmath,bm,amsfonts,amssymb}%数学宏包，amsfonts,amssymb是插入空心字母的包，使用命令\\mathbb{} %\\numberwithin{equation}{section}%公式按节进行编号 \\usepackage[dvipsnames]{xcolor} \\usepackage[a4paper,left=2.14cm,right=2.14cm,bottom=2cm,top=2cm]{geometry}%页面设置宏包 \\pagestyle{headings} \\usepackage{caption} \\captionsetup{figurename=图,tablename=表}%修改图标签名字 %opening \\title{草稿纸} \\author{陈普} \\date{\\today} \\usepackage{graphicx,picinpar,multicol,bm,float,framed} \\begin{document} \\maketitle % 这里是关键，通过用一个0宽度的盒子装填了表格中横线无法顶格的问题。 \\begin{framed} \\begin{table}[H] \\begin{tabular}{ccp{39.8em}}\\hline \\makebox[0pt][r]{\\rule[11pt]{0.5cm}{0.05em}}1&amp;1&amp;1 \\end{tabular} \\end{table} \\section{验证一下汉密尔顿定理} \\[max\\; \\sum_{t=0}^\\infty \\beta^tu(c_t)\\] \\[k_{t+1}=(1-\\delta)k_t+i_t\\] 这里控制变量是$ c_t $，状态变量是$ k_t $。汉密尔顿函数可以写成， \\[H = \\beta^tu(c_t) + \\pi_{t+1}(f(k_t)-c_t-\\delta k_t) \\] 注意到$ i_t= y_t-c_t $，因此，$ k_{t+1}-k_t=f(k_t)-c_t-\\delta k_t $。然后根据汉密尔顿定理，有， \\begin{align*} \\pi_{t+1}-\\pi_t=[-f&#39;(k_t)+\\delta]\\pi_{t+1}&amp;\\Longrightarrow \\pi_t=[f&#39;(k_t)+(1-\\delta)]\\pi_{t+1}\\\\ \\beta^tu&#39;(c_t)-\\pi_{t+1}=0&amp;\\Longrightarrow \\beta^tu&#39;(c_t)=\\pi_{t+1}\\\\ \\end{align*} 将$ \\beta^tu&#39;(c_t)=\\pi_{t+1} $的脚标做一个$ t $和$ t+1 $的替换，就有， \\[ f&#39;(k_t) +(1-\\delta) = \\frac{u&#39;(c_{t-1})}{\\beta u&#39;(c_{t})}\\] 这就是著名的欧拉方程。 \\end{framed} \\end{document} "],["Blog.html", "8 博客", " 8 博客 利用github搭建个人网站可遵循如下思路：利用jekyll工具来生成静态网页。 安装Ruby, bundler, jekyll三个工具，这是在本地改博客时需要的工具。 去Ruby官网下载最新的Ruby软件，并安装好 进入命令行，使用gem install bundler安装bundler 然后使用gem install jekyll安装jekyll 使用jekyll --version查看安装的是哪个版本，运行成功说明OK。出现问题，可以参看此处的讲解。 对于我们下面推荐的这个博客模板可以进入项目的目录后，使用bundle exec jekyll liveserve命令，然后在浏览器上使用http://127.0.0.1:4000/在本地查看自己的博客长啥样，并修改。 从头建站破费周章，作为科研人，我推荐一个模板，直接从github上fork到你自己的账户里面，然后做一些必要的修改即可。推荐的模板地址。 主要修改一下_config.yml。注意里面那个url的值是你的网站的网址，由github分配，比如我的就是https://common2016.github.io/chenpu.github.io _Pages里面存储了每个链接下第一个页面，比如about.md就是首页的内容。 一些可能的问题。 No GitHub API authentication could be found, 参见这里 一些常见的困惑。 比如你在_publications里面增加了一个文件factor，但是在本地浏览器却看不到，你要注意：浏览器地址是github的地址还是本地地址。这个地址往往是publication/factor而不是_publications/factor，你可以结合fork的那个网站来检查。 "],["OS.html", "9 macOS操作系统 9.1 一句话Tips 9.2 挂载外置磁盘", " 9 macOS操作系统 9.1 一句话Tips 进入外置磁盘目录，要先进入根目录，然后输入cd volumes就可以看到外置磁盘的名字了。 苹果系统查命令的详细说明可以使用比如man diskutil就可以查看命令diskutil的详细语法，阅读完后，输入q以退出。 在macOS上安装dynare，国内会因为连不上github而无法安装。如何在国内顺利连上github，参考https://juejin.cn/post/7039913254897860616 macOS上有一个优秀的包管理器Homebrew,进它的主页https://brew.sh/，一行代码让你装上该软件。注意，该软件同样要求你能够顺利连上github。很多情况下速度很慢，导致安装不上。可以如下步骤更换代码存储的源： curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh &gt;&gt; brew_install把安装过程的命令文件下载到你当前目录下。 打开文件brew_install更改默认的源： 将默认的源 HOMEBREW_BREW_DEFAULT_GIT_REMOTE = &quot;https://github.com/Homebrew/brew&quot; HOMEBREW_CORE_DEFAULT_GIT_REMOTE = “https://github.com/Homebrew/homebrew-core“ 修改为 HOMEBREW_BREW_DEFAULT_GIT_REMOTE = &quot;https://mirrors.ustc.edu.cn/brew.git&quot; HOMEBREW_CORE_DEFAULT_GIT_REMOTE = &quot;https://mirrors.ustc.edu.cn/homebrew-core.git 终端运行命令/bin/bash brew_install即可。最后依据终端的提示，添加brew的路径。 如果出现fatal: Could not resolve HEAD to a revision报错。按如下步骤解决：https://www.jianshu.com/p/54beebb59570。 当有了brew命令之后，安装jdk是非常简单的一件事。可以在homebrew搜索jdk的安装命令，它是brew install --cask oracle-jdk。有了jdk，我们就能愉快地使用R语言的xlsx包了。 chromedriver可以放在/usr/local/bin目录下，在命令行使用open /usr/local/bin打开该目录。 9.2 挂载外置磁盘 首先利用diskutil list查看你的外置磁盘的设备名称，在IDENTIFIER列中，一般是/dev/disk4s2之类的。 然后利用diskutil info disk4s2查询磁盘的UUID 然后设置开机挂载。命令行sudo vim /etc/fstab打开文本文件，输入如下: UUID=06A19C31-BED5-36E9-BEC9-616E398C77FD /Users/yangnay/elements exfat rw,auto 注意，exfat是你的硬盘的文件格式。 "],["Mathematica.html", "10 Mathematica 10.1 快捷键", " 10 Mathematica 基本的特征有三个： 任何函数是用[而不是(来定义； 它的内建函数都是大写字母开头； 列表用花括号。 函数定义f[x_]:=x^2，注意左边要有个下划线。 清除全部变量ClearAll[\"`*\"]，x=.清除x的赋值 写希腊字母Esc+a+Esc就是alpha，依次类推。其他，如Esc+tr+Esc就是转置的输入。 ctrl+/写分式 shift+enter运行单元格。注意，小键盘上的enter等价于shift+enter，然后大键盘上的enter就是换行。 在一条语句输完后加分号，可以抑制输出 删除单元格：选中单元右边的 “]”(变成蓝色),按delete键 {a,b,c,d}[[2]]提取列表的第二个元素，{a,b,c,d}[[2;;4]]提取列表的第二至第四个元素 f[x_,y_]:=x-y/;x&gt;y在\\(x&gt;y\\)时定义的函数 纯函数即匿名函数，该函数以#为参数占位，以&amp;符号结尾,如f=(3+#)&amp;,(#1^2+#^2)&amp;[x,y],后者的输出是\\(x^2+y^2\\) x/.Solve[x^2-2x+1,x]提取方程的解为列表 {a,f}.{c,d}是矩阵乘法 Table[Subscript[x, i], {i, 10}]生成\\(x_1,x_2,\\cdots,x_{10}\\)。 10.1 快捷键 行头行尾，cmd+a, cmd+e 选中当前光标到行头，cmd+shift+left; 选中当前光标到行尾, cmd+shift-right 到文本头,cmd+up;到文本尾，cmd+down "],["Python.html", "11 python 11.1 VSCode下配置python", " 11 python 11.1 VSCode下配置python 最近发现用vscode写python也不错，记录几个要点： 在应用拓展搜“python”，通过微软认证那个就是，一般就是第一个。 通过command+shift+P调出命令Python: Select interpreter，如果你以前用的是conda的python，你可以选择这个解释器，目录不出意外应该在~/opt/anaconda3/bin/python，这样，你以前安装的包都能调用。 "],["Other.html", "12 其他小众软件 12.1 PDF文件压缩 12.2 Eviews编程 12.3 GAUSS 12.4 NoteExpress样式设置 12.5 FileZilla", " 12 其他小众软件 12.1 PDF文件压缩 github上有个项目，windows下压缩PDF 项目地址：https://github.com/pgodwin/PdfShrinker 文件名不要有中文 12.2 Eviews编程 单引号'意味着评论。 一行写不完，用下划线表示下一行接着来_，就像matlab里面的...。 12.3 GAUSS 可以使用学生证申请它的light版，(网址)[https://www.aptech.com/industry-solutions/gauss-in-education/students/] F4类似于R里面的ctrl+enter，如果选中则运行选中行，没选中则运行当前行。运行整个代码使用Ctrl+R。 GAUSS在函数中，如果没有使用类似local x y方式定义的变量，都是全局变量，会在函数中修改函数外的值。 #include myfile.src将myfile.src文件中的内容插入到当前脚本中，类似于R语言中的source()。但是该命令不能在控制台执行，而只能嵌入在脚本中。要在控制台中达到相同的效果应该使用run myfile.src。 GAUSS也有自己的库，它调用库的命令与R类似，如library pgraph; a|b垂直连接矩阵a和b, a~b水平连接矩阵a和b。 12.3.1 系统函数 cdir(0)返回当前工作目录 chdir E:\\17_HuaDong\\learn\\HM2009\\PythonCode\\ch9_code_2nd_gauss;修改当前工作目录 12.4 NoteExpress样式设置 参考文献中文在前，英文在后，首先把文献的字段“语言”凡是英文的改为”English”，然后排序的时候先按语言排即可。 对于空格的处理，以*号连接，如 作者.标题[J].期刊,年份,卷|(期)|:*页码|. 一般情况上述格式中的标点符合与前面一个字段关联，如年份后面的逗号与年份同时出现，同时消失。如果想要标点符号和后面的字段关联，则要使用|符号。 12.5 FileZilla 这个文件传输文件不是一般地快。 官网下载地址：https://www.filezilla.cn/ 几个问题的处理： 很多时候直接就是连不上。做两个动作： 改客户端的文件传输为FTP，下面那个框框的选项是明文传输； 服务端的电脑，更改防火墙设置，把21端口开放。具体见这里 如果报错：425 Can’t open data connection。还是要更改服务端电脑的防火墙设置，具体见这里 "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
