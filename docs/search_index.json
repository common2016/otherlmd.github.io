[["Maple.html", "1 Maple 1.1 快捷键 1.2 几个基本的代数处理 1.3 产生序列 1.4 函数定义 1.5 控制流 1.6 画图 1.7 矩阵 1.8 一句话Tips", " 1 Maple 1.1 快捷键 ctrl+del删除全行 ctrl+K,ctrl+J在前或后插入一行 ?plot看帮助 with(plottools)载入包 F5文本和数学之间切换，shift+F5，可执行的公式和不可执行的公式之间切换。 1.2 几个基本的代数处理 复合函数\\(f(g(x))\\)可以写成，(evalf@arccos)(2/3)，这就对反余弦进行了数值评价 factor,expand,simplify，collect会进行因式分解，多项式展开，化简，合并同类项。带有附加关系的化简,simplify(expr, {x*z=1}) 1.3 产生序列 中括号产生list，它是有序的。大括号产生集合，它是无序的。下面的代码可以产生一系列值。 L:= [a1,a2,a3]: map(f, L) # [f(a1),f(a2),f(a3)] 可以使用L[i..j]来选择集合中的元素，也可以使用op(i..j,L)来选择多个元素。当然，使用seq函数也能产生一系列值。 [seq(f(n),n=n1..n2)] 1.4 函数定义 简单函数定义：f:=x-&gt;(1+x)^(1/x) 复杂函数定义： f:=proc(x) (1+x)^(1/x) end proc: 1.4.1 参数的宣称 如下写法可以按位置给参数赋值 f := proc(a::integer := 10, b::expects(integer) := 100.1) a + b end proc: 也可以按参数名称赋值，但写法略有不同 f := proc( { simple::integer := 2 } ) sprintf(&quot;simple=%d&quot;,simple) end proc: 1.5 控制流 条件语句： if ...then... elif...then... else ... end if: 1.6 画图 2D图：plot(sin(x), x=-Pi..2*Pi); 3D图：plot3d(f(x,y),x=a..b,y=c..d) 等高线图：plots[contourplot](f(x,y),x=a..b,y=c..d) 多图叠在一张图显示：plots[display](p1,p2,p3) 1.7 矩阵 通常要载入包LinearAlgebra和linalg。 产生脚标为\\(a_{i,j}\\)的矩阵\\(A\\)。 A:=array([a[1,1],a[1,2]],[a[2,1], a[2,2]]) A:=Matrix([a[1,1],a[1,2]],[a[2,1], a[2,2]]) A:=Matrix(2,2,symbol = a) A:=Vector(2, symbol = a) 矩阵计算 with(LinearAlgebra): evalm(A^2) A.B # 矩阵相乘 1.8 一句话Tips 对于\\(\\left(-\\frac{3}{4}\\right)^{2/3}\\)Maple不会主动化简，因为它不知道这个指数的底是正还是负。此时可以使用surd(x,n)函数 \\[surd(x,n)=\\begin{cases}x^{1/n},x\\ge 0\\\\ -(-x)^{1/n},x&lt;0\\end{cases}\\] 命令如surd((-3/4)^(2/3),3)^2 - 语句可以清除原来的f的定义， - 多项式降幂排列sort(x^3*y-y^3*x,[y,x]) - 乘号记得输入*，各种数学运算： - 求导：diff(f,x); 求二阶导数，diff(f,x$2) - nops返回比如向量的元素的数目： u:=[1,4,9]: nops(u); 求具体的数值，用evalf(Pi) 矩阵相乘用. 它的surfdata以点的数值的形式绘制三维曲线，相对比较好看。 用y替换表达式中的x：subs(x=y, expression) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
